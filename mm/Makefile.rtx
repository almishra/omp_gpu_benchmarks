# C++ compiler
CXX = clang++
CFLAGS = -Wall -O3 -fopenmp
OFFLOAD_FLAGS = -fopenmp-targets=nvptx64 -Xopenmp-target -march=sm_75

mm: mm.cpp mm_kernel_cpu_collapse.cpp mm_kernel_cpu.cpp mm_kernel_gpu_collapse.cpp mm_kernel_gpu_collapse_mem.cpp mm_kernel_gpu.cpp mm_kernel_gpu_mem.cpp
	for (( N1=1000; N1<=10000; N1+=1000 )); do \
	for (( N2=1000; N2<=10000; N2+=1000 )); do \
	for (( N3=1000; N3<=10000; N3+=1000 )); do \
	if [ ! -f mm_$${N1}_$${N2}_$${N3}_rtx.out ]; then \
  	$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm.cpp -o mm_$${N1}_$${N2}_$${N3}_rtx.o; \
	  $(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_cpu.cpp -o mm_kernel_cpu_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_cpu_collapse.cpp -o mm_kernel_cpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_gpu.cpp -o mm_kernel_gpu_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_gpu_collapse.cpp -o mm_kernel_gpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_gpu_mem.cpp -o mm_kernel_gpu_mem_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} -c mm_kernel_gpu_collapse_mem.cpp -o mm_kernel_gpu_collapse_mem_$${N1}_$${N2}_$${N3}_rtx.o; \
		$(CXX) $(CFLAGS) $(OFFLOAD_FLAGS) -DN1=$${N1} -DN2=$${N2} -DN3=$${N3} mm_kernel_cpu_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_cpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_mem_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_collapse_mem_$${N1}_$${N2}_$${N3}_rtx.o mm_$${N1}_$${N2}_$${N3}_rtx.o -o mm_$${N1}_$${N2}_$${N3}_rtx.out; \
		$(RM) mm_kernel_cpu_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_cpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_collapse_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_mem_$${N1}_$${N2}_$${N3}_rtx.o mm_kernel_gpu_collapse_mem_$${N1}_$${N2}_$${N3}_rtx.o mm_$${N1}_$${N2}_$${N3}_rtx.o; \
	fi; \
	done;done;done

clean:
	$(RM) *_rtx.o *_rtx.out
